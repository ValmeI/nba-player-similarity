# Variables
DOCKER_COMPOSE = docker-compose
CONTAINER_NAME = $(shell docker ps --filter "name=nba-app" --format "{{.Names}}")
DOCKER_EXEC = docker exec -it $(CONTAINER_NAME)
REQUIRED_PORTS = 8000 8501 6333


# ====== Docker Daemon Management ======
.PHONY: check-docker start-docker

## Check if Docker is running
check-docker:
	@echo "Checking if Docker is running..."
	@if (! docker info > /dev/null 2>&1); then \
		echo "Docker is not running. Attempting to start Docker..."; \
		$(MAKE) start-docker; \
	fi
	@echo "Docker is running."

## Start Docker if not running
start-docker:
	@echo "Starting Docker daemon..."
	@if [ -x "$(command -v systemctl)" ]; then \
		sudo systemctl start docker; \
	elif [ -x "$(command -v service)" ]; then \
		sudo service docker start; \
	else \
		echo "Unable to start Docker. Please ensure Docker is installed and running."; \
		exit 1; \
	fi


# ====== Local Development Commands ======
.PHONY: run-backend run-frontend data-load-local data-ingest-local lint format test kill-ports-local

## Kill processes using required ports locally
kill-ports-local:
	@echo "Killing processes on ports $(REQUIRED_PORTS) for local development..."
	@for port in $(REQUIRED_PORTS); do \
		sudo lsof -t -i:$$port | xargs -r kill -9 || true; \
	done
	@echo "Ports $(REQUIRED_PORTS) are now free for local development."

## Run the backend locally
run-backend: kill-ports-local
	python -m backend.run_backend_server_main

## Run the frontend locally
run-frontend: kill-ports-local
	streamlit run streamlit_frontend/src/app.py

## Run data loading script locally
data-load-local:
	python -m tasks.data_loading.data_load_main

## Run data ingestion script locally
data-ingest-local:
	python -m tasks.data_ingesting.ingest_data_main


# ====== Docker Deployment Commands ======
.PHONY: build up up-build down logs clean data-load data-ingest kill-ports-docker

## Kill processes using required ports for Docker deployment
kill-ports-docker:
	@echo "Killing processes on ports $(REQUIRED_PORTS) for Docker deployment..."
	@for port in $(REQUIRED_PORTS); do \
		sudo lsof -t -i:$$port | xargs -r kill -9 || true; \
	done
	@echo "Ports $(REQUIRED_PORTS) are now free for Docker deployment."

## Build Docker images
build: check-docker
	$(DOCKER_COMPOSE) build

## Start Docker Compose services
up: check-docker kill-ports-docker
	$(DOCKER_COMPOSE) up -d

## Build and start Docker Compose services
up-build: check-docker kill-ports-docker
	$(DOCKER_COMPOSE) up --build -d

## Stop Docker Compose services
down: check-docker
	$(DOCKER_COMPOSE) down

## View logs for the nba-app service
logs: check-docker
	$(DOCKER_COMPOSE) logs -f nba-app

## Clean Docker containers and volumes
clean: check-docker kill-ports-docker
	$(DOCKER_COMPOSE) down --volumes --remove-orphans
	docker system prune -f

## Run data loading script inside Docker
data-load: check-docker
	$(DOCKER_EXEC) python -m tasks.data_loading.data_load_main

## Run data ingestion script inside Docker
data-ingest: check-docker
	$(DOCKER_EXEC) python -m tasks.data_ingesting.ingest_data_main


# ====== Help ======
.PHONY: help
help:
	@echo "Usage: make <command>"
	@echo ""
	@echo "Docker Daemon Management:"
	@echo "  check-docker      - Check if Docker is running and start it if not"
	@echo "  start-docker      - Start Docker manually"
	@echo ""
	@echo "Local Development Commands:"
	@echo "  run-backend       - Start the FastAPI backend locally"
	@echo "  run-frontend      - Start the Streamlit frontend locally"
	@echo "  data-load-local   - Run the data loading script locally"
	@echo "  data-ingest-local - Run the data ingestion script locally"
	@echo "  kill-ports-local  - Free required ports for local development"
	@echo ""
	@echo "Docker Deployment Commands:"
	@echo "  build             - Build Docker images"
	@echo "  up                - Start Docker Compose services"
	@echo "  up-build          - Build and start Docker Compose services"
	@echo "  down              - Stop Docker Compose services"
	@echo "  logs              - View logs for the nba-app service"
	@echo "  clean             - Stop all services and clean up Docker resources"
	@echo "  data-load         - Run the data loading script inside Docker"
	@echo "  data-ingest       - Run the data ingestion script inside Docker"
	@echo "  kill-ports-docker - Free required ports for Docker deployment"
